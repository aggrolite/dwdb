#!/usr/bin/env perl

use Mojo::Base -strict;
use Mojo::UserAgent;
use Mojo::Util qw(dumper);

use Getopt::Long qw(:config auto_abbrev);

GetOptions(
    yes => \my $YES,
) or die 'oops';

sub results {
    my $dom = shift;

    my @router_info;

    for my $router ($dom->find('tr.even, tr.odd')->each) {
        my @text = $router->find('td')->text->each;
        my %info;
        my @labels = ('Manufacturer', 'Model', 'Revision', 'Supported', 'Activation required');
        warn "Didn't get 5 labels!" if @labels != 5;
        $info{$_} = shift(@text) for @labels;
        push @router_info, \%info;
    }

    if ($YES) {
        my @filtered = grep { $_->{'Supported'} eq 'yes' } @router_info;
        my $total = @router_info - @filtered;
        return @filtered
          ? dumper(\@filtered)
          : 'No results, but ' . @router_info . ' unsupported routers were found.';
    }

    return @router_info ? dumper(\@router_info) : 'No results!';
}

sub do_search {
    my $q    = shift;
    my $ua   = Mojo::UserAgent->new;
    my $url  = 'http://www.dd-wrt.com/routerdb/de/routerResult.php';
    my $post = $ua->post(
        $url,
        form => {
            action   => 'routerList',
            criteria => $q,
            site     => 'drupal',
        }
    );
    if (my $res = $post->success) { say results($res->dom) }
    else {
        my ($err, $code) = $post->error;
        die $code ? "$code response: $err" : "Connection error: $err";
    }
}

my $query = join ' ', @ARGV;
die 'You must specify a router name or model!' unless defined($query);
do_search($query);
